// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Booking {
  id         Int      @id @default(autoincrement())
  userId     Int
  hotelId    Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  bookingAmount Int 
  status     BookingStatus  @default(PENDING)
  totalGuests Int
  idempotencyKey IdempotencyKey? 
  // idempotencyKeyId Int? @unique  
  // idempotencyKey IdempotencyKey? @relation(fields: [idempotencyKeyId], references: [id])  
}

model IdempotencyKey {
  id        Int      @id @default(autoincrement())
  idemKey   String   @unique  //going to contain booking Id 
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt
  finalized Boolean @default(false) //to check if the booking is finalized or not
  bookingId Int? @unique
  booking  Booking?   @relation(fields: [bookingId], references: [id]) //booking association
  // booking   Booking?   //booking association
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

